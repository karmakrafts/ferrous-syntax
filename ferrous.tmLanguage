<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>name</key>
		<string>Ferrous</string>
		<key>scopeName</key>
		<string>source.fe</string>
		<key>uuid</key>
		<string>d5bced29-0de9-4c42-ba46-bba7beed673e</string>
		<key>fileTypes</key>
		<array>
			<string>fe</string>
			<string>ferrous</string>
		</array>
		<key>patterns</key>
		<array>
			<dict>
				<key>include</key>
				<string>#block_comment</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#inline_comment</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#ml_string_literal</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#string_literal</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#attrib_usage</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#mod_block</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#function</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#type_alias</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#udt</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#call_conv_mod</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#keyword</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#int_literal</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<!-- multiline string literal -->
			<key>ml_string_literal</key>
			<dict>
				<key>begin</key>
				<string>#"</string>
				<key>end</key>
				<string>(?&lt;!\\)"#</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.fe</string>
					</dict>
				</dict>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>[^("#)]*</string>
						<key>name</key>
						<string>string.quoted.multiline.fe</string>
					</dict>
				</array>
			</dict>
			<!-- string literal -->
			<key>string_literal</key>
			<dict>
				<key>begin</key>
				<string>"</string>
				<key>end</key>
				<string>(?&lt;!\\)"</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.fe</string>
					</dict>
				</dict>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>[^"]*</string>
						<key>name</key>
						<string>string.quoted.double.fe</string>
					</dict>
				</array>
			</dict>
			<!-- hex int literals -->
			<key>hex_int_literal</key>
			<dict>
				<key>begin</key>
				<string>0[xX][0-9a-fA-F]+</string>
				<key>end</key>
				<string>\s|,|;|\)|\}|(?=$)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>constant.numeric.int.hex.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(i|u)(8|16|32|64)</string>
						<key>name</key>
						<string>constant.numeric.int.dec.fe</string>
					</dict>
				</array>
			</dict>
			<!-- bin int literals -->
			<key>bin_int_literal</key>
			<dict>
				<key>begin</key>
				<string>0[bB][01]+</string>
				<key>end</key>
				<string>\s|,|;|\)|\}|(?=$)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>constant.numeric.int.bin.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(i|u)(8|16|32|64)</string>
						<key>name</key>
						<string>constant.numeric.int.dec.fe</string>
					</dict>
				</array>
			</dict>
			<!-- oct int literals -->
			<key>oct_int_literal</key>
			<dict>
				<key>begin</key>
				<string>0[oO][0-7]+</string>
				<key>end</key>
				<string>\s|,|;|\)|\}|(?=$)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>constant.numeric.int.oct.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(i|u)(8|16|32|64)</string>
						<key>name</key>
						<string>constant.numeric.int.dec.fe</string>
					</dict>
				</array>
			</dict>
			<!-- dec int literals -->
			<key>dec_int_literal</key>
			<dict>
				<key>begin</key>
				<string>(?:(?&lt;![0-9a-zA-Z_]))[0-9]+</string>
				<key>end</key>
				<string>\s|,|;|\)|\}|(?=$)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>constant.numeric.int.dec.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>((i|u)(8|16|32|64))|(f(32|64))</string>
						<key>name</key>
						<string>constant.numeric.int.dec.fe</string>
					</dict>
				</array>
			</dict>
			<!-- int literals -->
			<key>int_literal</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#oct_int_literal</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#hex_int_literal</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#bin_int_literal</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#dec_int_literal</string>
					</dict>
				</array>
			</dict>
			<!-- attribute usage -->
			<key>attrib_usage</key>
			<dict>
				<key>begin</key>
				<string>(@\s*\b[a-zA-Z_]+[a-zA-Z_0-9]*\b)\s*</string>
				<key>end</key>
				<string>\s*(@|(?=$))</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.annotation.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>\(</string>
						<key>end</key>
						<string>\)</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.fe</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<!-- field -->
			<key>field</key>
			<dict>
				<key>begin</key>
				<string>(\b[a-zA-Z_]+[a-zA-Z_0-9]*\b)\s*:\s*</string>
				<key>end</key>
				<string>\s*(;|(?=$))</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.field.fe</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#type</string>
					</dict>
				</array>
			</dict>
			<!-- udt -->
			<key>udt</key>
			<dict>
				<key>begin</key>
				<string>(\bstruct\b|\benum\bclass\b|\bclass\b|\btrait\b|\binterface\b|\battrib\b)\s*([a-zA-Z_]+[a-zA-Z_0-9]*)\s*(\{)</string>
				<key>end</key>
				<string>\}</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key> <!-- mod -->
					<dict>
						<key>name</key>
						<string>keyword.fe</string>
					</dict>
					<key>2</key> <!-- IDENT -->
					<dict>
						<key>name</key>
						<string>entity.name.namespace.fe</string>
					</dict>
				</dict>
				<key>patterns</key> <!-- SCOPE -->
				<array>
					<dict>
						<key>include</key>
						<string>#field</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.fe</string>
					</dict>
				</array>
			</dict>
			<!-- module block -->
			<key>mod_block</key>
			<dict>
				<key>begin</key>
				<string>\b(mod)\b\s*([a-zA-Z_]+[a-zA-Z_0-9]*)\s*(\{)</string>
				<key>end</key>
				<string>\}</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key> <!-- mod -->
					<dict>
						<key>name</key>
						<string>keyword.fe</string>
					</dict>
					<key>2</key> <!-- IDENT -->
					<dict>
						<key>name</key>
						<string>entity.name.namespace.fe</string>
					</dict>
				</dict>
				<key>patterns</key> <!-- SCOPE -->
				<array>
					<dict>
						<key>include</key>
						<string>source.fe</string>
					</dict>
				</array>
			</dict>
			<!-- block comment -->
			<key>block_comment</key>
			<dict>
				<key>name</key>
				<string>comment.block.fe</string>
				<key>begin</key>
				<string>/\*</string>
				<key>end</key>
				<string>\*/</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.fe</string>
					</dict>
				</dict>
			</dict>
			<!-- inline comment -->
			<key>inline_comment</key>
			<dict>
				<key>name</key>
				<string>comment.inline.fe</string>
				<key>match</key>
				<string>//(.*)$</string>
			</dict>
			<!-- type alias -->
			<key>type_alias</key>
			<dict>
				<key>begin</key>
				<string>\b(type)\b\s*(\b[a-zA-Z_]+[a-zA-Z_0-9]*\b)\s*=</string>
				<key>end</key>
				<string>;|(?=$)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key> <!-- type -->
					<dict>
						<key>name</key>
						<string>keyword.fe</string>
					</dict>
					<key>2</key> <!-- IDENT -->
					<dict>
						<key>name</key>
						<string>entity.name.type.fe</string>
					</dict>
				</dict>
				<key>patterns</key> <!-- SCOPE -->
				<array>
					<dict>
						<key>include</key>
						<string>#type</string>
					</dict>
				</array>
			</dict>
			<!-- functions -->
			<key>function</key>
			<dict>
				<key>begin</key>
				<string>(?=\s*(?:fun))</string>
				<key>end</key>
				<string>}|(?=$)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(\b[a-zA-Z_]+[a-zA-Z_0-9]*\b)(?:(\s*\())</string>
						<key>end</key>
						<string>\)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>entity.name.function.fe</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>(\b[a-zA-Z_]+[a-zA-Z_0-9]*\b)(?:(\s*:\s*))(?=([^,\s\)]+))</string>
								<key>captures</key>
								<dict>
									<key>1</key> <!-- parameter name -->
									<dict>
										<key>name</key>
										<string>entity.name.parameter.fe</string>
									</dict>
								</dict>
							</dict>
							<dict>
								<key>include</key>
								<string>#type</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#type</string>
					</dict>
				</array>
			</dict>
			<!-- type -->
			<key>type</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#keyword</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(\b[a-zA-Z_]+[a-zA-Z_0-9]*\b)</string>
						<key>name</key>
						<string>entity.name.type.fe</string>
					</dict>
				</array>
			</dict>
			<!-- callconv modifier -->
			<key>call_conv_mod</key>
			<dict>
				<key>begin</key>
				<string>\b(callconv)\b(\()</string>
				<key>end</key>
				<string>\)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key> <!-- callconv -->
					<dict>
						<key>name</key>
						<string>keyword.fe</string>
					</dict>
				</dict>
				<key>patterns</key> <!-- IDENT -->
				<array>
					<dict>
						<key>name</key>
						<string>entity.name.call_conv.fe</string>
						<key>match</key>
						<string>([a-zA-Z_]+[a-zA-Z_0-9]*)</string>
					</dict>
				</array>
			</dict>
			<key>keyword</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#misc_keyword</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#primitive_keyword</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#literal_keyword</string>
					</dict>
				</array>
			</dict>
			<key>misc_keyword</key>
			<dict>
				<key>name</key>
				<string>keyword.misc.fe</string>
				<key>match</key>
				<string>\b(stackalloc|interface|bitfield|override|callconv|alignof|virtual|literal
					|default|sizeof|vaargs|return|extern|struct|attrib|delete|atomic|panic
					|token|while|macro|const|class|trait|ident|super|when|else|loop|type|expr
					|enum|goto|null|this|new|for|pub|use|mod|inl|tls|let|mut|fun|get|set|as|is|in|op|if|do)\b</string>
			</dict>
			<key>primitive_keyword</key>
			<dict>
				<key>name</key>
				<string>keyword.primitive.fe</string>
				<key>match</key>
				<string>\b(isize|i64|i32|i16|i8|usize|u64|u32|u16|u8
					|f64|f32|void|char|bool|string)\b</string>
			</dict>
			<key>literal_keyword</key>
			<dict>
				<key>name</key>
				<string>keyword.fe</string>
				<key>match</key>
				<string>\b(null|true|false)\b</string>
			</dict>
		</dict>
	</dict>
</plist>